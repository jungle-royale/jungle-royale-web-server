name: Deploy to AWS

on:
  push:
    branches:
      - test

jobs:
  build-and-deploy:
    name: Build, Push Docker Image, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build the application
      run: ./gradlew build

    - name: Log in to Amazon ECR
      env:
        AWS_REGION: ap-northeast-2
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 014188558656.dkr.ecr.ap-northeast-2.amazonaws.com

    - name: Build Docker image
      run: docker build -t jungle-royale/web-server .

    - name: Tag Docker image
      run: docker tag jungle-royale/web-server:latest 014188558656.dkr.ecr.ap-northeast-2.amazonaws.com/jungle-royale/web-server:latest

    - name: Push Docker image to ECR
      run: docker push 014188558656.dkr.ecr.ap-northeast-2.amazonaws.com/jungle-royale/web-server:latest

    - name: Deploy to EC2
      env:
        EC2_USER: ec2-user
        EC2_HOST: YOUR_EC2_PUBLIC_IP_OR_HOSTNAME
        PEM_FILE: YOUR_KEY_PAIR_FILE.pem
      run: |
        ssh -o StrictHostKeyChecking=no -i $PEM_FILE $EC2_USER@$EC2_HOST "bash -s" < ./server.sh
