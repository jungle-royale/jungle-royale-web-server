name: Build, Push Docker Image, and Deploy

on:
  pull_request:
    branches:
      - test

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: gradle

      # Gradle 캐시 설정
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 애플리케이션 빌드 (실행은 하지 않음)
      - name: Build JAR file
        run: ./gradlew build -x test

      # AWS ECR 로그인
      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        run: |
          export AWS_DEFAULT_REGION=ap-northeast-2
          docker build -t jungle-royale/web-server .
          docker tag jungle-royale/web-server:latest 014188558656.dkr.ecr.ap-northeast-2.amazonaws.com/jungle-royale/web-server:latest
          docker push 014188558656.dkr.ecr.ap-northeast-2.amazonaws.com/jungle-royale/web-server:latest

      # EC2 서버에 배포
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i $PEM_FILE $EC2_USER@$EC2_HOST "bash -s" < ~/server.sh
        env:
          PEM_FILE: ${{ secrets.PEM_FILE }}
          EC2_USER: ec2-user
          EC2_HOST: ${{ secrets.EC2_HOST }}
